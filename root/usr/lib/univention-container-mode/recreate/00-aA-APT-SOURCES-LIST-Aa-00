#!/bin/bash
#
# Univention Container Mode - apt-sources-list
#
# Copyright 2020-2021 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

## util(s)
source /usr/lib/univention-container-mode/utils.sh || exit 1

## function(s)
# function name() { # name: (IN)[>(OUT)]
# 	echo function
# }

## ucr shell
# eval "$(ucr shell hostname domainname)"

## declare
declare -a ucrchanges
# ucrchanges+=("key=value")
declare -a ucrremoves
# ucrremoves+=("key")

declare -A ucrcounter
# ucrcounter[<STRING>]=<INT>

declare -A ucrcommit
# ucrcommit+=/<PATH>/<FILE> OR ucrcommit[<FILE>]=/<PATH>/<FILE>

debug "### START SCRIPT($(pwd)/$0) ###"
## restore/recreate the container mode environment
#
restore=/var/backups/univention-container-mode
#
# restore force if we have a vaild backup
#  find more in ( join/99-system-restore-initialize )
[[ -f ${restore}/restore ]] && {
	#
	VERSION=$(tr --complement --delete '[:digit:]' <${restore}/restore)
	#
	version=$(
		awk '\
			/ucs/{ \
				for(i=0;i<=NF;i++){ \
					if ( $i ~ /^ucs/) { gsub(/^ucs/,"",$i); printf $i } \
				} \
			}' $(find /etc/apt/sources.list /etc/apt/sources.list.d -type f -name *.list)
	)
	#
	# restore when the server role is not set and a nice version was found compared to the backup
	#  ( never try to automatically downgrade the system, but respect the requested value )
	[[ $(ucr get server/role 2>/dev/null) =~ ^$ ]] &&
		test ${version} -lt ${VERSION} && RESTORE=${RESTORE:-FORCE}
	#
	# set a nice version compare if requested or detected
	#  ( upgrade the system )
	[[ ${RESTORE-} =~ ^force|FORCE$ ]] &&
		VERSION=${VERSION} LATEST=TRUE /bin/bash ${0/recreate/join}
}
#
## restore/recreate the container mode environment
debug "### STOPP SCRIPT($(pwd)/$0) ###"

## ucr removes
UniventionConfigRegistryUnSet ${ucrremoves[@]}

## ucr changes
UniventionConfigRegistrySet ${ucrchanges[@]}

## ucr commit
UniventionConfigCommit ${ucrcommit[@]}

## cleanup
unset \
	ucrchanges ucrremoves ucrcounter ucrcommit

debug "### CLEAN SCRIPT($(pwd)/$0) ###"
