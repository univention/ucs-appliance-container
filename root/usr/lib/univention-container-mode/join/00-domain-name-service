#!/bin/bash
#
# Univention Container Mode - domain-name-service
#
# Copyright 2020-2021 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

## util(s)
source /usr/lib/univention-container-mode/utils.sh || exit 1

## function(s)
# function name() { # name: (IN)[>(OUT)]
# 	echo function
# }

## ucr shell
# eval "$(ucr shell hostname domainname)"

## declare
declare -a ucrchanges
# ucrchanges+=("key=value")
declare -a ucrremoves
# ucrremoves+=("key")

declare -A ucrcounter
# ucrcounter[<STRING>]=<INT>
ucrcounter[nameserver]=1
ucrcounter[forwarder]=1
ucrcounter[resolv.conf]=1

declare -A ucrcommit
# ucrcommit+=/<PATH>/<FILE> OR ucrcommit[<FILE>]=/<PATH>/<FILE>
ucrcommit[resolv.conf]=/etc/resolv.conf

debug "### START SCRIPT($(pwd)/$0) ###"
## Nameserverconfig for ucr commit ${ucrcommit[resolv.conf]}
#
for ns in $(sed -rn 's/^nameserver[\t ]+([^\t ]+)/\1/p' ${ucrcommit[resolv.conf]}); do
	[[ ${ucrcounter[resolv.conf]} -gt 3 ]] && break
	ucrchanges+=("nameserver${ucrcounter[resolv.conf]}=${ns}")
	ucrcounter[resolv.conf]=$((${ucrcounter[resolv.conf]} + 1))
	debug $(host ${ns})
done
#
# overwrite(s) from container mode environment if dcwait inactive
#  INFO: see ( 52-setup-join ) maybe we have to wait for a master
#   FIX: be sure to overwrite any old nameserver and/or forwarder
#    OK: why not configure the same server three times ...
#
[[ ${dcwait-} =~ ^1|yes|true|YES|TRUE$ ]] || {
	for ns in ${nameserver[@]:-} ${nameserver[@]:-} ${nameserver[@]:-}; do
		[[ ${ucrcounter[nameserver]} -gt 3 ]] && break
		ucrchanges+=("nameserver${ucrcounter[nameserver]}=${ns}")
		ucrcounter[nameserver]=$((${ucrcounter[nameserver]} + 1))
		debug $(host ${ns})
	done
	#
	for ns in ${forwarder[@]:-} ${forwarder[@]:-} ${forwarder[@]:-}; do
		[[ ${ucrcounter[forwarder]} -gt 3 ]] && break
		ucrchanges+=("dns/forwarder${ucrcounter[forwarder]}=${ns}")
		ucrcounter[forwarder]=$((${ucrcounter[forwarder]} + 1))
		debug $(host ${ns})
	done
}
#
[[ -z ${domainname:-} ]] && domainname="$(hostname --long 2>/dev/null | sed -re 's/^[^.]+.//' || /bin/true)"
[[ -z ${domainname:-} ]] && domainname="$(hostname | sed -re 's/^[^.]+.//' || /bin/true)"
[[ -z ${domainname:-} ]] && domainname="$(echo ${HOSTNAME:-} | sed -re 's/^[^.]+.//')"
[[ -z ${domainname:-} ]] && domainname="$(sed -rn 's/^domain[\t ]+([^\t ]+)/\1/p' ${ucrcommit[resolv.conf]})"
[[ -z ${domainname:-} ]] || ucrchanges+=("domainname=${domainname}")
#
## Nameserverconfig for ucr commit ${ucrcommit[resolv.conf]}
debug "### STOPP SCRIPT($(pwd)/$0) ###"

## ucr removes
UniventionConfigRegistryUnSet ${ucrremoves[@]}

## ucr changes
UniventionConfigRegistrySet ${ucrchanges[@]}

## ucr commit
UniventionConfigCommit ${ucrcommit[@]}

## cleanup
unset \
	domainname \
	nameserver forwarder \
	ucrchanges ucrremoves ucrcounter ucrcommit

debug "### CLEAN SCRIPT($(pwd)/$0) ###"
