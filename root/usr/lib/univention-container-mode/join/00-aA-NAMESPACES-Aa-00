#!/bin/bash
#
# Univention Container Mode - namespace
#
# Copyright 2020-2021 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

## util(s)
source /usr/lib/univention-container-mode/utils.sh || exit 1

## function(s)
# function name() { # name: (IN)[>(OUT)]
# 	echo function
# }

## ucr shell
# eval "$(ucr shell hostname domainname)"

## declare
declare -a ucrchanges
# ucrchanges+=("key=value")
declare -a ucrremoves
# ucrremoves+=("key")

declare -A ucrcounter
# ucrcounter[<STRING>]=<INT>

declare -A ucrcommit
# ucrcommit+=/<PATH>/<FILE> OR ucrcommit[<FILE>]=/<PATH>/<FILE>

debug "### START SCRIPT($(pwd)/$0) ###"
## Fix private tmp and/or restrict namespaces for container mode environment
# remove hardening option(s) from known service unit(s)
#
privateTmp=(univention-container-mode-private-temp)
services=(apache2 ntp nagios-nrpe-server)
#
# unmask/start service unit(s)
for unit in ${privateTmp[@]} systemd-logind systemd-timedated memcached; do
	for stat in unmask start; do
		systemctl ${stat} -- ${unit}.service >/dev/null 2>&1 || /bin/true
	done
done
#
for unit in ${privateTmp[@]} systemd-logind systemd-timedated memcached; do
	journalctl --full --all --no-pager --no-hostname --unit ${unit}.service | egrep --quiet -- NAMESPACE || continue && {
		# disable private tmp from known service(s) by override config file
		for service in ${services[@]}; do
			conf=/usr/lib/systemd/system/${service}.service.d/disable-private-tmp.conf
			[[ -d $(dirname ${conf}) ]] || mkdir $(dirname ${conf}) || continue && {
				echo -e "[Service]\nPrivateTmp=false" > \
					${conf}
			}
		done
	}
done
#
# stop/mask service unit(s)
for unit in ${privateTmp[@]}; do
	for stat in stop mask; do
		systemctl ${stat} -- ${unit}.service >/dev/null 2>&1 || /bin/true
	done
done
#
UniventionFixServiceUnitNamespace
#
## Fix private tmp and/or restrict namespaces for container mode environment
debug "### STOPP SCRIPT($(pwd)/$0) ###"

## ucr removes
UniventionConfigRegistryUnSet ${ucrremoves[@]}

## ucr changes
UniventionConfigRegistrySet ${ucrchanges[@]}

## ucr commit
UniventionConfigCommit ${ucrcommit[@]}

## cleanup
unset \
	ucrchanges ucrremoves ucrcounter ucrcommit

debug "### CLEAN SCRIPT($(pwd)/$0) ###"
